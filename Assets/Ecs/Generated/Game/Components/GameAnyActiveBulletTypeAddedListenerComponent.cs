//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public AnyActiveBulletTypeAddedListenerComponent AnyActiveBulletTypeAddedListener { get { return (AnyActiveBulletTypeAddedListenerComponent)GetComponent(GameComponentsLookup.AnyActiveBulletTypeAddedListener); } }
	public bool HasAnyActiveBulletTypeAddedListener { get { return HasComponent(GameComponentsLookup.AnyActiveBulletTypeAddedListener); } }

	public void AddAnyActiveBulletTypeAddedListener(System.Collections.Generic.List<IAnyActiveBulletTypeAddedListener> newValue)
	{
		var index = GameComponentsLookup.AnyActiveBulletTypeAddedListener;
		var component = (AnyActiveBulletTypeAddedListenerComponent)CreateComponent(index, typeof(AnyActiveBulletTypeAddedListenerComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.value = newValue;
		#endif
		AddComponent(index, component);
	}

	public void ReplaceAnyActiveBulletTypeAddedListener(System.Collections.Generic.List<IAnyActiveBulletTypeAddedListener> newValue)
	{
		var index = GameComponentsLookup.AnyActiveBulletTypeAddedListener;
		var component = (AnyActiveBulletTypeAddedListenerComponent)CreateComponent(index, typeof(AnyActiveBulletTypeAddedListenerComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.value = newValue;
		#endif
		ReplaceComponent(index, component);
	}

	public void CopyAnyActiveBulletTypeAddedListenerTo(AnyActiveBulletTypeAddedListenerComponent copyComponent)
	{
		var index = GameComponentsLookup.AnyActiveBulletTypeAddedListener;
		var component = (AnyActiveBulletTypeAddedListenerComponent)CreateComponent(index, typeof(AnyActiveBulletTypeAddedListenerComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.value = copyComponent.value;
		#endif
		ReplaceComponent(index, component);
	}

	public void RemoveAnyActiveBulletTypeAddedListener()
	{
		RemoveComponent(GameComponentsLookup.AnyActiveBulletTypeAddedListener);
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity : IAnyActiveBulletTypeAddedListenerEntity { }

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher
{
	static JCMG.EntitasRedux.IMatcher<GameEntity> _matcherAnyActiveBulletTypeAddedListener;

	public static JCMG.EntitasRedux.IMatcher<GameEntity> AnyActiveBulletTypeAddedListener
	{
		get
		{
			if (_matcherAnyActiveBulletTypeAddedListener == null)
			{
				var matcher = (JCMG.EntitasRedux.Matcher<GameEntity>)JCMG.EntitasRedux.Matcher<GameEntity>.AllOf(GameComponentsLookup.AnyActiveBulletTypeAddedListener);
				matcher.ComponentNames = GameComponentsLookup.ComponentNames;
				_matcherAnyActiveBulletTypeAddedListener = matcher;
			}

			return _matcherAnyActiveBulletTypeAddedListener;
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public void AddAnyActiveBulletTypeAddedListener(IAnyActiveBulletTypeAddedListener value)
	{
		var listeners = HasAnyActiveBulletTypeAddedListener
			? AnyActiveBulletTypeAddedListener.value
			: new System.Collections.Generic.List<IAnyActiveBulletTypeAddedListener>();
		listeners.Add(value);
		ReplaceAnyActiveBulletTypeAddedListener(listeners);
	}

	public void RemoveAnyActiveBulletTypeAddedListener(IAnyActiveBulletTypeAddedListener value, bool removeComponentWhenEmpty = true)
	{
		var listeners = AnyActiveBulletTypeAddedListener.value;
		listeners.Remove(value);
		if (removeComponentWhenEmpty && listeners.Count == 0)
		{
			RemoveAnyActiveBulletTypeAddedListener();
		}
		else
		{
			ReplaceAnyActiveBulletTypeAddedListener(listeners);
		}
	}
}
