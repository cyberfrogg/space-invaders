//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public VelocityAddedListenerComponent VelocityAddedListener { get { return (VelocityAddedListenerComponent)GetComponent(GameComponentsLookup.VelocityAddedListener); } }
	public bool HasVelocityAddedListener { get { return HasComponent(GameComponentsLookup.VelocityAddedListener); } }

	public void AddVelocityAddedListener(System.Collections.Generic.List<IVelocityAddedListener> newValue)
	{
		var index = GameComponentsLookup.VelocityAddedListener;
		var component = (VelocityAddedListenerComponent)CreateComponent(index, typeof(VelocityAddedListenerComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.value = newValue;
		#endif
		AddComponent(index, component);
	}

	public void ReplaceVelocityAddedListener(System.Collections.Generic.List<IVelocityAddedListener> newValue)
	{
		var index = GameComponentsLookup.VelocityAddedListener;
		var component = (VelocityAddedListenerComponent)CreateComponent(index, typeof(VelocityAddedListenerComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.value = newValue;
		#endif
		ReplaceComponent(index, component);
	}

	public void CopyVelocityAddedListenerTo(VelocityAddedListenerComponent copyComponent)
	{
		var index = GameComponentsLookup.VelocityAddedListener;
		var component = (VelocityAddedListenerComponent)CreateComponent(index, typeof(VelocityAddedListenerComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.value = copyComponent.value;
		#endif
		ReplaceComponent(index, component);
	}

	public void RemoveVelocityAddedListener()
	{
		RemoveComponent(GameComponentsLookup.VelocityAddedListener);
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity : IVelocityAddedListenerEntity { }

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher
{
	static JCMG.EntitasRedux.IMatcher<GameEntity> _matcherVelocityAddedListener;

	public static JCMG.EntitasRedux.IMatcher<GameEntity> VelocityAddedListener
	{
		get
		{
			if (_matcherVelocityAddedListener == null)
			{
				var matcher = (JCMG.EntitasRedux.Matcher<GameEntity>)JCMG.EntitasRedux.Matcher<GameEntity>.AllOf(GameComponentsLookup.VelocityAddedListener);
				matcher.ComponentNames = GameComponentsLookup.ComponentNames;
				_matcherVelocityAddedListener = matcher;
			}

			return _matcherVelocityAddedListener;
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public void AddVelocityAddedListener(IVelocityAddedListener value)
	{
		var listeners = HasVelocityAddedListener
			? VelocityAddedListener.value
			: new System.Collections.Generic.List<IVelocityAddedListener>();
		listeners.Add(value);
		ReplaceVelocityAddedListener(listeners);
	}

	public void RemoveVelocityAddedListener(IVelocityAddedListener value, bool removeComponentWhenEmpty = true)
	{
		var listeners = VelocityAddedListener.value;
		listeners.Remove(value);
		if (removeComponentWhenEmpty && listeners.Count == 0)
		{
			RemoveVelocityAddedListener();
		}
		else
		{
			ReplaceVelocityAddedListener(listeners);
		}
	}
}
