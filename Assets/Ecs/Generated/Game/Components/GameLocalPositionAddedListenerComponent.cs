//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public LocalPositionAddedListenerComponent LocalPositionAddedListener { get { return (LocalPositionAddedListenerComponent)GetComponent(GameComponentsLookup.LocalPositionAddedListener); } }
	public bool HasLocalPositionAddedListener { get { return HasComponent(GameComponentsLookup.LocalPositionAddedListener); } }

	public void AddLocalPositionAddedListener(System.Collections.Generic.List<ILocalPositionAddedListener> newValue)
	{
		var index = GameComponentsLookup.LocalPositionAddedListener;
		var component = (LocalPositionAddedListenerComponent)CreateComponent(index, typeof(LocalPositionAddedListenerComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.value = newValue;
		#endif
		AddComponent(index, component);
	}

	public void ReplaceLocalPositionAddedListener(System.Collections.Generic.List<ILocalPositionAddedListener> newValue)
	{
		var index = GameComponentsLookup.LocalPositionAddedListener;
		var component = (LocalPositionAddedListenerComponent)CreateComponent(index, typeof(LocalPositionAddedListenerComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.value = newValue;
		#endif
		ReplaceComponent(index, component);
	}

	public void CopyLocalPositionAddedListenerTo(LocalPositionAddedListenerComponent copyComponent)
	{
		var index = GameComponentsLookup.LocalPositionAddedListener;
		var component = (LocalPositionAddedListenerComponent)CreateComponent(index, typeof(LocalPositionAddedListenerComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.value = copyComponent.value;
		#endif
		ReplaceComponent(index, component);
	}

	public void RemoveLocalPositionAddedListener()
	{
		RemoveComponent(GameComponentsLookup.LocalPositionAddedListener);
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity : ILocalPositionAddedListenerEntity { }

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher
{
	static JCMG.EntitasRedux.IMatcher<GameEntity> _matcherLocalPositionAddedListener;

	public static JCMG.EntitasRedux.IMatcher<GameEntity> LocalPositionAddedListener
	{
		get
		{
			if (_matcherLocalPositionAddedListener == null)
			{
				var matcher = (JCMG.EntitasRedux.Matcher<GameEntity>)JCMG.EntitasRedux.Matcher<GameEntity>.AllOf(GameComponentsLookup.LocalPositionAddedListener);
				matcher.ComponentNames = GameComponentsLookup.ComponentNames;
				_matcherLocalPositionAddedListener = matcher;
			}

			return _matcherLocalPositionAddedListener;
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public void AddLocalPositionAddedListener(ILocalPositionAddedListener value)
	{
		var listeners = HasLocalPositionAddedListener
			? LocalPositionAddedListener.value
			: new System.Collections.Generic.List<ILocalPositionAddedListener>();
		listeners.Add(value);
		ReplaceLocalPositionAddedListener(listeners);
	}

	public void RemoveLocalPositionAddedListener(ILocalPositionAddedListener value, bool removeComponentWhenEmpty = true)
	{
		var listeners = LocalPositionAddedListener.value;
		listeners.Remove(value);
		if (removeComponentWhenEmpty && listeners.Count == 0)
		{
			RemoveLocalPositionAddedListener();
		}
		else
		{
			ReplaceLocalPositionAddedListener(listeners);
		}
	}
}
