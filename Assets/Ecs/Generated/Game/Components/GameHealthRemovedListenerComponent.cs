//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public HealthRemovedListenerComponent HealthRemovedListener { get { return (HealthRemovedListenerComponent)GetComponent(GameComponentsLookup.HealthRemovedListener); } }
	public bool HasHealthRemovedListener { get { return HasComponent(GameComponentsLookup.HealthRemovedListener); } }

	public void AddHealthRemovedListener(System.Collections.Generic.List<IHealthRemovedListener> newValue)
	{
		var index = GameComponentsLookup.HealthRemovedListener;
		var component = (HealthRemovedListenerComponent)CreateComponent(index, typeof(HealthRemovedListenerComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.value = newValue;
		#endif
		AddComponent(index, component);
	}

	public void ReplaceHealthRemovedListener(System.Collections.Generic.List<IHealthRemovedListener> newValue)
	{
		var index = GameComponentsLookup.HealthRemovedListener;
		var component = (HealthRemovedListenerComponent)CreateComponent(index, typeof(HealthRemovedListenerComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.value = newValue;
		#endif
		ReplaceComponent(index, component);
	}

	public void CopyHealthRemovedListenerTo(HealthRemovedListenerComponent copyComponent)
	{
		var index = GameComponentsLookup.HealthRemovedListener;
		var component = (HealthRemovedListenerComponent)CreateComponent(index, typeof(HealthRemovedListenerComponent));
		#if !ENTITAS_REDUX_NO_IMPL
		component.value = copyComponent.value;
		#endif
		ReplaceComponent(index, component);
	}

	public void RemoveHealthRemovedListener()
	{
		RemoveComponent(GameComponentsLookup.HealthRemovedListener);
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity : IHealthRemovedListenerEntity { }

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher
{
	static JCMG.EntitasRedux.IMatcher<GameEntity> _matcherHealthRemovedListener;

	public static JCMG.EntitasRedux.IMatcher<GameEntity> HealthRemovedListener
	{
		get
		{
			if (_matcherHealthRemovedListener == null)
			{
				var matcher = (JCMG.EntitasRedux.Matcher<GameEntity>)JCMG.EntitasRedux.Matcher<GameEntity>.AllOf(GameComponentsLookup.HealthRemovedListener);
				matcher.ComponentNames = GameComponentsLookup.ComponentNames;
				_matcherHealthRemovedListener = matcher;
			}

			return _matcherHealthRemovedListener;
		}
	}
}

//------------------------------------------------------------------------------
// <auto-generated>
//		This code was generated by a tool (Genesis v2.3.2.0).
//
//
//		Changes to this file may cause incorrect behavior and will be lost if
//		the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity
{
	public void AddHealthRemovedListener(IHealthRemovedListener value)
	{
		var listeners = HasHealthRemovedListener
			? HealthRemovedListener.value
			: new System.Collections.Generic.List<IHealthRemovedListener>();
		listeners.Add(value);
		ReplaceHealthRemovedListener(listeners);
	}

	public void RemoveHealthRemovedListener(IHealthRemovedListener value, bool removeComponentWhenEmpty = true)
	{
		var listeners = HealthRemovedListener.value;
		listeners.Remove(value);
		if (removeComponentWhenEmpty && listeners.Count == 0)
		{
			RemoveHealthRemovedListener();
		}
		else
		{
			ReplaceHealthRemovedListener(listeners);
		}
	}
}
